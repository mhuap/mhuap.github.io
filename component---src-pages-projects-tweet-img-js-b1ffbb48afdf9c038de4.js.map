{"version":3,"sources":["webpack://matias-huapaya-portfolio/./src/components/PageTemplate.js","webpack://matias-huapaya-portfolio/./src/components/project-header.js","webpack://matias-huapaya-portfolio/./src/components/project.js","webpack://matias-huapaya-portfolio/./src/components/projectInfo.js","webpack://matias-huapaya-portfolio/./src/images/tweet/insta-examples@2x.jpg","webpack://matias-huapaya-portfolio/./src/pages/projects/tweet-img.js","webpack://matias-huapaya-portfolio/./src/images/filler.jpeg","webpack://matias-huapaya-portfolio/./src/images/tweetimg.jpg"],"names":["props","useState","isExpanded","setIsExpanded","handleToggle","e","preventDefault","id","to","className","href","target","rel","onClick","onKeyDown","children","title","date","description","team","role","context","techs","award","featuredimage","name","text","group","alt","src","filler","keywords","PageTemplate","InfoList","map","item","key","InfoLine","tweetImg","insta"],"mappings":"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","file":"component---src-pages-projects-tweet-img-js-b1ffbb48afdf9c038de4.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"gatsby\";\n\nfunction PageTemplate(props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleToggle = (e) => {\n    e.preventDefault();\n    setIsExpanded(!isExpanded);\n  }\n\n  return (\n    <>\n    <nav id=\"side-bar\">\n      <Link id=\"initials\" to=\"/\">\n        MH\n      </Link>\n\n      <ul id=\"menu\" className={`collapsed ${isExpanded ? \"is-expanded\" : \"\"}`}>\n        <li>\n          <Link to='/about'>\n            about me\n          </Link>\n        </li>\n        <li>\n          <a href='https://drive.google.com/file/d/1JAX1C2G02xuYuxuripNENvbYk7sqhqEd/view?usp=sharing' target='_blank' rel=\"noreferrer\">\n            resume\n          </a>\n        </li>\n        <li>\n          <a href='https://twitter.com/matias_huapaya' target='_blank' rel=\"noreferrer\">Twitter</a>\n        </li>\n        <li>\n          <a href='https://www.linkedin.com/in/matias-huapaya-2b50a0129/' target='_blank' rel=\"noreferrer\">LinkedIn</a>\n        </li>\n        <li>\n          <a href='mailto: huapmar97@gmail.com' target='_blank' rel=\"noreferrer\">Email</a>\n        </li>\n      </ul>\n      <button className=\"hamburger\" onClick={handleToggle} onKeyDown={handleToggle}>{isExpanded ? '✕' : '☰'}</button>\n    </nav>\n\n    <div id='page'>\n      {props.children}\n    </div>\n\n    <footer>\n      <p>\n        designed + coded with ♥ by Matias Huapaya\n      </p>\n    </footer>\n    </>\n  );\n}\n\nexport default PageTemplate\n","import React from 'react';\nimport { InfoList, InfoLine } from \"../components/projectInfo.js\";\nimport '../styles/project.scss';\nimport filler from '../images/filler.jpeg';\n\nfunction ProjectHeader({title, date, description, team, role, context, techs, award, featuredimage}) {\n  return (\n    <div className=\"project-header\">\n      <div className='project-header--top'>\n        <div>\n          <h1>{title}</h1>\n          <p className='project-date'>{date}</p>\n        </div>\n        <h2>{description} </h2>\n      </div>\n      <div className='project-header--info'>\n        <div className='project-header--info-left'>\n          <InfoLine name='Project Teammates' text={team}/>\n          <InfoLine name='My Role' text={role}/>\n          <InfoLine name='Context' text={context}/>\n        </div>\n        <div>\n          {award === '' ? '' : <InfoLine name='Award' text={award}/>}\n          <InfoList name=\"Skills\" group={techs}/>\n        </div>\n      </div>\n\n      <img className='featured-img' alt={title} src={featuredimage ?  featuredimage : filler} />\n    </div>\n  )\n}\n\nexport default ProjectHeader;\n","import React from \"react\";\n\nimport PageTemplate from '../components/PageTemplate';\nimport ProjectHeader from '../components/project-header';\nimport SEO from \"../components/seo\";\nimport '../styles/project.scss';\n\nfunction Project({ title, date, description, team, role, context, techs, featuredimage, award, children }) {\n\n  return (\n  <>\n    <SEO title={title} keywords={[`portfolio`, `website`, `matias`, `huapaya`, `development`, `app`]} />\n    <PageTemplate>\n      <div className=\"project-content\">\n        <div>\n          <ProjectHeader\n            title={title}\n            date={date}\n            description={description}\n            team={team}\n            role={role}\n            context={context}\n            techs={techs}\n            featuredimage={featuredimage}\n            award={award}\n          />\n\n          <div className=\"project-content--html\">\n            {children}\n          </div>\n\n        </div>\n      </div>\n    </PageTemplate>\n  </>\n  )\n}\n\n\nexport default Project;\n","import React from \"react\";\n\nfunction InfoList({name, group}){\n  return (\n    <div className='project-header--list'>\n      <span className='project-header--title'>{name}</span>\n      <ul>\n        {group.map(item => (\n          <li key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction InfoLine({name, text}){\n  return (\n    <p>\n      <span className='project-header--title'>{name}</span>\n      {text}\n    </p>\n  )\n}\n\nexport { InfoList, InfoLine };\n","export default __webpack_public_path__ + \"static/insta-examples@2x-7d9be52b589ddfb04a01d72af468c2a6.jpg\";","import React from 'react';\nimport Project from '../../components/project';\nimport insta from '../../images/tweet/insta-examples@2x.jpg';\nimport tweetImg from '../../images/tweetimg.jpg';\n\nfunction TweetImg() {\n  return (\n    <Project\n      title='tweet-img'\n      date='JAN 2020 - PRESENT'\n      description={`Progressive web app that converts tweets into images with colored backgrounds. Perfect for sharing tweets\n        on Instagram.`}\n      team='N/A'\n      role=\"Full-stack developer\"\n      context=\"Personal project\"\n      techs={[\"React\", \"Twitter API\", \"Next.js\", \"html2canvas\"]}\n      featuredimage={tweetImg}\n      award=''\n    >\n\n      <div className='demo'>\n        <a href='https://mhuap.github.io/tweet-img/'>Visit Site</a>\n        <a href='https://github.com/mhuap/tweet-img'>Github</a>\n      </div>\n\n      <h3>Inspiration</h3>\n\n      <p>I noticed a trend of posting tweets to instagram with a colored background.\n      Usually, these are made with screenshots of tweets, but in some cases further edits are made\n      (e.g. adding a border to tweet section, or deleting the tweet background entirely).\n      </p>\n\n      <figure>\n        <img src={insta} alt='Collage of instagram posts of tweets.'/>\n        <figcaption>Examples of Instagram posts of tweets</figcaption>\n      </figure>\n\n      <p>I searched for an existing automated way to do this without using some sort\n      of external graphic-design program, and I found <a href=\"http://www.twimmage.com\">Twimmage</a>.\n      Twimmage has a lot of the features I was looking for in terms of the backgrounds,\n      but it didn't handle the tweet content very well - the tweet box size is always fixed irregardless of\n      tweet length, and it does not support images or emojis.\n      </p>\n\n      <p>So I decided to make my own.</p>\n\n      <h3>Build</h3>\n\n      <p>Initially, I scraped the tweet data from Twitter using cheerio.js via Google Cloud Functions.\n      At some point Twitter obfuscated their CSS, which made scraping impossible. In a way it all worked out\n      for the better because I made a Developer account and got access to the official Twitter API, which gave\n      me more flexibility.</p>\n\n      <p>The current tech stack looks like this:</p>\n      <p><strong>Frontend: </strong>I built on Next.js and used html2canvas to\n      convert html into a canvas to save as an image. I used axios to make the call to the backend. Also I\n      created a custom colorpicker using <a href=\"https://casesandberg.github.io/react-color/\">React Color</a>.</p>\n\n      <p><strong>Backend: </strong>I used Next.js's serverless functions to create an HTTPs request between the\n      front-end and Twitter's API.\n      </p>\n\n      <p>I chose to use Next.js out of curiosity for the framework and desire to experiment with it. I ended up deploying with Vercel\n      and the whole experience was very smooth and convenient seeing as they're made to be used together.</p>\n\n      <h3>What's Next</h3>\n\n      <p>I just finished working on a good amount of features for this project. It has truly grown into more than just a\n      minimum viable product - so much so that my friends and I use it regularly. I keep track of all upcoming changes\n      on <a href='https://github.com/mhuap/tweet-img/projects/3'>github</a>.</p>\n\n      <p>Current background customization features include using a solid color,\n      an uploaded image, or an image from a URL.</p>\n\n    </Project>\n  )\n}\n\nexport default TweetImg;\n","export default __webpack_public_path__ + \"static/filler-79e381527c3f83e798df417daf8e13ae.jpeg\";","export default __webpack_public_path__ + \"static/tweetimg-117f45a6016a3f297c7c3f59faaaf1d9.jpg\";"],"sourceRoot":""}